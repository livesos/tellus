<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tellus.service.core.mapper.GroupMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.tellus.service.core.model.GroupEntity">
        <id column="ID" property="id"/>
        <result column="NAME" property="name"/>
        <result column="CODE" property="code"/>
        <result column="ENABLED" property="enabled"/>
        <result column="REMARK" property="remark"/>
        <result column="CREATOR" property="creator"/>
        <result column="CREATED_AT" property="createdAt"/>
        <result column="UPDATER" property="updater"/>
        <result column="UPDATED_AT" property="updatedAt"/>
        <result column="PARENT_ID" property="parentId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ID, NAME, CODE, ENABLED, REMARK, CREATOR, CREATED_AT, UPDATER, UPDATED_AT
    </sql>

    <!-- @formatter:off -->
    <!-- 根据用户 Id, 查询组织 -->
    <select id="selectByUserIds" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT,
               G2.ANCESTOR PARENT_ID
        FROM T_GROUP G
                     JOIN T_GROUP_USER GU ON G.ID = GU.GROUP_ID
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 2) G2
                ON G.ID = G2.DESCENDANT
        WHERE GU.USER_ID IN
        <foreach collection="userIds" item="userId" index="index" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>
    <!-- @formatter:on -->

    <!-- =================================================================================  -->
    <!--       == Relationship ==     -->
    <!-- =================================================================================  -->

    <!-- 查询指定节点下最深层级的所有子节点 -->
    <select id="selectLowestDistances" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT
        FROM T_RELATION REL
                     JOIN (SELECT ANCESTOR, MAX(DISTANCE) DISTANCE FROM T_RELATION WHERE TYPE = 2 GROUP BY ANCESTOR) R2
                ON REL.ANCESTOR = R2.ANCESTOR AND REL.DISTANCE = R2.DISTANCE
                     JOIN T_GROUP G ON REL.DESCENDANT = G.ID
        WHERE REL.ANCESTOR = #{ancestor}
    </select>

    <!-- 查询节点 #{ancestor} 的所有子级 -->
    <!-- @formatter:off -->
    <select id="selectSubs" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_GROUP G ON (REL.DESCENDANT = G.ID AND REL.TYPE = 2)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 2) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE
          <if test="includeSelf == true">
              AND REL.DISTANCE >= 0
          </if>
          <if test="includeSelf == false">
              AND REL.DISTANCE > 0
          </if>
          <if test="ancestors != null and ancestors.size > 0">
              AND REL.ANCESTOR IN
              <foreach collection="ancestors" item="ancestor" index="index" open="(" separator="," close=")">
                  #{ancestor}
              </foreach>
          </if>
    </select>
    <!-- @formatter:on -->

    <!-- 查询 #{ancestor} 第 #{distance} 层的所有节点 -->
    <select id="selectByDistance" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_GROUP G ON (REL.DESCENDANT = G.ID AND REL.TYPE = 2)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 2) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.ANCESTOR = #{ancestor}
          AND REL.DISTANCE = #{distance}
    </select>

    <!-- 查询 #{ancestor} 上级到第 #{distance} 层之间的所有节点 -->
    <select id="selectPathSubs" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_GROUP G ON (REL.DESCENDANT = G.ID AND REL.TYPE = 2)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 2) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.ANCESTOR = #{ancestor}
          AND REL.DISTANCE <![CDATA[<=]]> #{distance}
    </select>

    <!-- 查询 #{ancestor} (不含) 与 #{descendant} 之间所有的节点 -->
    <select id="selectPathToAncestor" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_GROUP G ON (REL.DESCENDANT = G.ID AND REL.TYPE = 2)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 2) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.DESCENDANT = #{descendant}
          AND REL.DISTANCE <![CDATA[<]]>
              (SELECT DISTANCE
               FROM T_RELATION
               WHERE REL.TYPE = 2
                 AND DESCENDANT = #{descendant}
                 AND ANCESTOR = #{ancestor})
        ORDER BY DISTANCE DESC
    </select>

    <!-- 查询 #{descendant} 往上第 #{distance} 层的父节点 -->
    <select id="selectParent" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_GROUP G ON (REL.DESCENDANT = G.ID AND REL.TYPE = 2)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 2) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.DESCENDANT = #{descendant}
          AND REL.DISTANCE = #{distance}
    </select>

    <!-- 查询 #{descendant} 往上到第 #{distance} 层父节点之间的所有节点 -->
    <select id="selectPathParents" resultMap="BaseResultMap">
        SELECT G.ID,
               G.NAME,
               G.CODE,
               G.ENABLED,
               G.REMARK,
               G.CREATOR,
               G.CREATED_AT,
               G.UPDATER,
               G.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_GROUP G ON (REL.DESCENDANT = G.ID AND REL.TYPE = 2)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 2) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.DESCENDANT = #{descendant}
          AND REL.DISTANCE <![CDATA[<]]> #{distance}
    </select>
</mapper>
