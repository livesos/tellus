<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tellus.service.core.mapper.MenuMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.tellus.service.core.model.MenuEntity">
        <id column="ID" property="id"/>
        <result column="NAME" property="name"/>
        <result column="VALUE" property="value"/>
        <result column="ENABLED" property="enabled"/>
        <result column="REMARK" property="remark"/>
        <result column="SORT" property="sort"/>
        <result column="CREATOR" property="creator"/>
        <result column="CREATED_AT" property="createdAt"/>
        <result column="UPDATER" property="updater"/>
        <result column="UPDATED_AT" property="updatedAt"/>
        <result column="PARENT_ID" property="parentId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ID, NAME, VALUE, ENABLED, REMARK, SORT, CREATOR, CREATED_AT, UPDATER, UPDATED_AT
    </sql>

    <!-- 根据 userId 查询菜单 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT DISTINCT M.ID,
                        M.NAME,
                        M.VALUE,
                        M.ENABLED,
                        M.REMARK,
                        M.SORT,
                        M.CREATOR,
                        M.CREATED_AT,
                        M.UPDATER,
                        M.UPDATED_AT,
                        REL.ANCESTOR PARENT_ID
        FROM T_MENU M
                     JOIN T_ROLE_MENU RM ON RM.MENU_ID = M.ID
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) REL
                ON REL.DESCENDANT = M.ID
        WHERE ROLE_ID IN (
                SELECT ROLE_ID
                FROM (
                             SELECT U.ID USER_ID, REL.DESCENDANT ROLE_ID
                             FROM T_RELATION REL
                                          JOIN T_ROLE R ON REL.DESCENDANT = R.ID AND REL.TYPE = 3
                                          JOIN T_USER_ROLE UR ON UR.ROLE_ID = R.ID
                                          JOIN T_USER U ON UR.USER_ID = U.ID
                             UNION ALL
                             SELECT U.ID USER_ID, R.ID ROLE_ID
                             FROM T_USER U,
                                  T_GROUP_USER GU,
                                  T_GROUP G,
                                  T_GROUP_ROLE GR,
                                  T_ROLE R
                             WHERE U.ID = GU.USER_ID
                               AND G.ID = GU.GROUP_ID
                               AND GR.GROUP_ID = G.ID
                               AND R.ID = GR.ROLE_ID
                             ) R2
                WHERE R2.USER_ID = #{userId})
    </select>

    <!-- 根据角色ID, 查询菜单 -->
    <!-- @formatter:off -->
    <select id="selectByRoleIds" resultMap="BaseResultMap">
        SELECT DISTINCT M.ID,
                        M.NAME,
                        M.VALUE,
                        M.ENABLED,
                        M.REMARK,
                        M.SORT,
                        M.CREATOR,
                        M.CREATED_AT,
                        M.UPDATER,
                        M.UPDATED_AT,
                        REL.ANCESTOR PARENT_ID
        FROM T_MENU M
                     JOIN T_ROLE_MENU RM ON RM.MENU_ID = M.ID
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) REL
                ON REL.DESCENDANT = M.ID
                     JOIN (SELECT ANCESTOR, DISTANCE, R.ID
                           FROM T_RELATION REL
                                        JOIN T_ROLE R ON R.ID = REL.DESCENDANT AND REL.TYPE = 3) R
                ON R.ID = RM.ROLE_ID
        WHERE R.DISTANCE >= 0
        <if test="roleIds != null and roleIds.size > 0">
            AND R.ANCESTOR IN
            <foreach collection="roleIds" item="roleId" index="index" open="(" separator="," close=")">
                #{roleId}
            </foreach>
        </if>
    </select>
    <!-- @formatter:on -->

    <!-- =================================================================================  -->
    <!--       == Relationship ==     -->
    <!-- =================================================================================  -->

    <!-- 查询指定节点下最深层级的所有子节点 -->
    <select id="selectLowestDistances" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT
        FROM T_RELATION REL
                     JOIN (SELECT ANCESTOR, MAX(DISTANCE) DISTANCE FROM T_RELATION WHERE TYPE = 5 GROUP BY ANCESTOR) R2
                ON REL.ANCESTOR = R2.ANCESTOR AND REL.DISTANCE = R2.DISTANCE
                     JOIN T_MENU M ON REL.DESCENDANT = M.ID
        WHERE REL.ANCESTOR = #{ancestor}
    </select>

    <!-- 查询节点 #{ancestor} 的所有子级 -->
    <!-- @formatter:off -->
    <select id="selectSubs" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_MENU M ON (REL.DESCENDANT = M.ID AND REL.TYPE = 5)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE
          <if test="includeSelf == true">
              AND REL.DISTANCE >= #{distance}
          </if>
          <if test="includeSelf == false">
              AND REL.DISTANCE > #{distance}
          </if>
          <if test="ancestors != null and ancestors.size > 0">
              AND REL.ANCESTOR IN
              <foreach collection="ancestors" item="ancestor" index="index" open="(" separator="," close=")">
                  #{ancestor}
              </foreach>
          </if>
    </select>
    <!-- @formatter:on -->

    <!-- 查询 #{ancestor} 第 #{distance} 层的所有节点 -->
    <select id="selectByDistance" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_MENU M ON (REL.DESCENDANT = M.ID AND REL.TYPE = 5)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.ANCESTOR = #{ancestor}
          AND REL.DISTANCE = #{distance}
    </select>

    <!-- 查询 #{ancestor} 上级到第 #{distance} 层之间的所有节点 -->
    <select id="selectPathSubs" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_MENU M ON (REL.DESCENDANT = M.ID AND REL.TYPE = 5)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.ANCESTOR = #{ancestor}
          AND REL.DISTANCE <![CDATA[<=]]> #{distance}
    </select>

    <!-- 查询 #{ancestor} (不含) 与 #{descendant} 之间所有的节点 -->
    <select id="selectPathToAncestor" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_MENU M ON (REL.DESCENDANT = M.ID AND REL.TYPE = 5)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.DESCENDANT = #{descendant}
          AND REL.DISTANCE <![CDATA[<]]>
              (SELECT DISTANCE
               FROM T_RELATION
               WHERE REL.TYPE = 5
                 AND DESCENDANT = #{descendant}
                 AND ANCESTOR = #{ancestor})
        ORDER BY DISTANCE DESC
    </select>

    <!-- 查询 #{descendant} 往上第 #{distance} 层的父节点 -->
    <select id="selectParent" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_MENU M ON (REL.DESCENDANT = M.ID AND REL.TYPE = 5)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.DESCENDANT = #{descendant}
          AND REL.DISTANCE = #{distance}
    </select>

    <!-- 查询 #{descendant} 往上到第 #{distance} 层父节点之间的所有节点 -->
    <select id="selectPathParents" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_MENU M ON (REL.DESCENDANT = M.ID AND REL.TYPE = 5)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) R2
                ON REL.DESCENDANT = R2.DESCENDANT
        WHERE REL.DESCENDANT = #{descendant}
          AND REL.DISTANCE <![CDATA[<]]> #{distance}
    </select>

    <!-- 根据条件分页查询, 返回直属上级 Id -->
    <select id="selectWithAncestorPage" resultMap="BaseResultMap">
        SELECT M.ID,
               M.NAME,
               M.VALUE,
               M.ENABLED,
               M.REMARK,
               M.SORT,
               M.CREATOR,
               M.CREATED_AT,
               M.UPDATER,
               M.UPDATED_AT,
               R2.ANCESTOR PARENT_ID
        FROM T_RELATION REL
                     JOIN T_MENU M ON (REL.DESCENDANT = M.ID AND REL.TYPE = 5)
                     JOIN (SELECT ANCESTOR, DESCENDANT FROM T_RELATION WHERE DISTANCE = 1 AND TYPE = 5) R2
                ON REL.DESCENDANT = R2.DESCENDANT
    </select>
</mapper>
